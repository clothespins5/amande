<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amande.infrastructure.repository.paint.PaintRepositoryMapper">
  <select id="selectEvents"
          resultType="com.amande.infrastructure.repository.paint.PaintEventRecord">
    SELECT aggregate_id aggregateID,
           "version",
           event_type   eventType,
           json_data    jsonData
    FROM domain.paint_event pe
    WHERE aggregate_id = #{aggregateID}
  </select>
  <insert id="insertEvent">
    INSERT INTO domain.paint_event(aggregate_id, "version", event_type, json_data)
    VALUES
    <foreach collection="eventRecords" item="record" separator=",">
    (
      #{record.aggregateID},
      #{record.version},
      #{record.eventType},
      #{record.jsonData}::jsonb
    )
    </foreach>
  </insert>
  <insert id="upsertAggregate">
    INSERT INTO domain.paint_aggregate(
      aggregate_id,
      last_version
    )
    VALUES (
             #{aggregateID},
             #{lastVersion}
           )
    ON CONFLICT ON CONSTRAINT paint_aggregate_pkey
      DO UPDATE SET last_version = excluded.last_version
  </insert>
</mapper>