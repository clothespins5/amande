plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.2'
  id 'org.flywaydb.flyway' version "9.10.1"
}

repositories {
  mavenCentral()
}

dependencies {
  implementation platform('org.springframework.boot:spring-boot-dependencies:2.7.3')
  implementation 'org.springframework.boot:spring-boot-starter-web'
  runtimeOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  implementation platform('com.fasterxml.jackson:jackson-bom:2.14.1')
  implementation 'com.fasterxml.jackson.core:jackson-core'
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.fasterxml.jackson.core:jackson-annotations'

  implementation 'org.apache.commons:commons-math3:3.6.1'
  implementation 'org.postgresql:postgresql:42.3.8'

  compileOnly 'org.projectlombok:lombok:1.18.24'
  annotationProcessor 'org.projectlombok:lombok:1.18.24'
  testCompileOnly 'org.projectlombok:lombok:1.18.24'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
  compileOnly 'org.flywaydb:flyway-core:9.10.1'

  implementation 'com.eventstore:db-client-java:4.0.0'

}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

flyway {
  url = 'jdbc:postgresql://localhost:5432/postgres'
  user = 'postgres'
  password = 'postgres'
  schemas = ['domain', 'query']
  locations = ['classpath:db/migration']
  cleanDisabled = false
}


tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

test {
  useJUnitPlatform()
}